version: '3.8'

services:
  # Go API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - PORT=8080
    volumes:
      - ./starwars.db:/app/starwars.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Angular Frontend (for development)
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "
        if [ ! -d node_modules ]; then
          npm install
        fi &&
        npm run start -- --host 0.0.0.0 --port 4200
      "
    depends_on:
      - api
    environment:
      - NODE_ENV=development
    restart: unless-stopped

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  node_modules:
